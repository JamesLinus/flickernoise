#!/bin/sh
#
# Common - Elements shared by all regression tests for the FNP parser
#
# Written 2010, 2011 by Werner Almesberger
# Copyright 2010, 2011 Werner Almesberger
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#


ptest()
{
	echo -n "$1: " 1>&2
	shift
	$VALGRIND ${PTST:-../ptest/ptest} "$@" >_out 2>&1 || {
		echo FAILED "($SCRIPT)" 1>&2
		cat _out
		rm -f _out
		exit 1
	}
}


ptest_fail()
{
	echo -n "$1: " 1>&2
	shift
	$VALGRIND ${PTST:-../ptest/ptest} "$@" >_out 2>&1 && {
		echo FAILED "($SCRIPT)" 1>&2
		cat _out
		rm -f _out
		exit 1
	}
}


expect()
{
	diff -u - "$@" _out >_diff || {
		echo FAILED "($SCRIPT)" 1>&2
		cat _diff 1>&2
		rm -f _out _diff
		if ${FAIL_ON_ERROR:-true}; then
			exit 1
		else
			failed=`expr ${failed:-0} + 1`
			return 1
		fi
	}
	echo PASSED 1>&2
	rm -f _out _diff
	passed=`expr ${passed:-0} + 1`
}


sedit()
{
	sed "$1" _out >_tmp || exit 1
	mv _tmp _out
}


equiv1()
{
	echo -n "$1: " 1>&2
	shift
	$VALGRIND ${PTST:-../ptest/ptest} "$@" >_out 2>&1 || {
		echo FAILED "($SCRIPT)" 1>&2
		cat _out
		rm -f _out
		exit 1
	}
}


equiv2()
{
	#
	# "plus" and "minus" are adjusted up by one to ignore also the +++ and
	# --- lines at the beginning of the diff. On output, this adjustment
	# is hidden from the user.
	#

	plus=0
	minus=0
	while [ "$1" ]; do
		case "$1" in
			+[0-9]*)	plus=`expr ${1#+} + 1`;;
			-[0-9]*)	minus=`expr ${1#-} + 1`;;
			*)		break;;
		esac
		shift
	done
	$VALGRIND ${PTST:-../ptest/ptest} "$@" >_two 2>&1 || {
		echo FAILED "($SCRIPT)" 1>&2
		cat _two
		rm -f _out _two
		exit 1
	}
	diff -u _out _two >_diff
	if [ `grep -c '^+' _diff` -ne $plus ] ||
	   [ `grep -c '^-' _diff` -ne $minus ]; then
		echo FAILED "($SCRIPT)" 1>&2
		cat _diff 1>&2
		if [ $plus != 0 -o $minus != 0 ]; then
			[ $plus = 0 ] || plus=`expr $plus - 1`
			[ $minus = 0 ] || minus=`expr $minus - 1`
			echo "(Ignoring +$plus -$minus)" 1>&2
		fi
		rm -f _out _two _diff
		exit 1
	fi
	echo PASSED 1>&2
	rm -f _out _two _diff
	passed=`expr ${passed:-0} + 1`
}


fpvm()
{
	one=$1
	shift
	ptest "$one" -c -c "$@"
	${PRVM:-../ptest/prvm.pl} _out >_tmp || exit 1
	mv _tmp _out
}
